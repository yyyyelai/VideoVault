name: Build Tauri App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.platform }}
    
    strategy:
      matrix:
        platform: [macos-latest]

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check system info
      run: |
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "Available memory: $(free -h || echo 'Memory info not available')"
        echo "Disk space: $(df -h || echo 'Disk info not available')"
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        target: ${{ matrix.platform == 'windows-latest' && 'x86_64-pc-windows-msvc' || matrix.platform == 'macos-latest' && 'x86_64-apple-darwin' || 'x86_64-unknown-linux-gnu' }}
    
    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Install Tauri CLI
      run: npm install -g @tauri-apps/cli
    
    - name: Build frontend
      run: |
        echo "Starting frontend build..."
        npm run build
        echo "Frontend build completed successfully"
      timeout-minutes: 15
      env:
        NODE_ENV: production
    
    - name: Build Tauri app
      run: npm run tauri:build
      timeout-minutes: 20
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        CARGO_INCREMENTAL: 0
        RUST_BACKTRACE: 1
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: tauri-app-${{ matrix.platform }}
        path: src-tauri/target/release/
